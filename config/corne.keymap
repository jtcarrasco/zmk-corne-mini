#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3

//testing mouse movement and scroll binds...

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp Q             &kp W               &kp E                 &kp R           &kp T         &kp Y      &kp U       &kp I                &kp O                &kp P                      &none
&none  &hm LEFT_SHIFT A  &hm LEFT_CONTROL S  &kp D                 &hm LEFT_WIN F  &kp G         &kp H      &hm RWIN J  &kp K                &hm RIGHT_CONTROL L  &hm RIGHT_SHIFT SEMICOLON  &none
&none  &kp Z             &kp X               &kp C                 &kp V           &kp B         &kp N      &kp M       &kp COMMA            &kp PERIOD           &kp SLASH                  &none
                                             &kp LS(LC(LEFT_ALT))  &mo 2           &kp ESCAPE    &kp SPACE  &mo 1       &mt RIGHT_GUI ENTER
            >;
        };

        NUM {
            display-name = "Num";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &none           &mt EXCLAMATION NUMBER_1  &mt AT_SIGN NUMBER_2      &mt HASH NUMBER_3        &none            &kp DELETE  &kp LC(N0)  &kp LC(MINUS)  &kp LC(PLUS)  &kp BACKSPACE    &none
&none  &none           &mt DOLLAR NUMBER_4       &mt PERCENT N5            &mt CARET NUMBER_6       &kp PAGE_UP      &kp LEFT    &kp DOWN    &kp UP_ARROW   &kp RIGHT     &kp LC(R)        &none
&none  &kp LEFT_SHIFT  &mt AMPERSAND N7          &mt ASTERISK N8           &mt LEFT_PARENTHESIS N9  &kp PAGE_DOWN    &kp LC(Z)   &kp LC(X)   &kp LC(C)      &kp LC(V)     &kp RIGHT_SHIFT  &none
                                                 &mt RIGHT_PARENTHESIS N0  &trans                   &kp LG(V)        &kp TAB     &trans      &kp LC(S)
            >;
        };

        FUN {
            display-name = "Fun";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &trans          &kp F1  &kp F2   &kp F3  &kp GRAVE        &kp TILDE       &kp MINUS             &kp EQUAL              &kp UNDER          &kp PLUS          &none
&none  &caps_word      &kp F4  &kp F5   &kp F6  &kp PG_UP        &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp LEFT_BRACKET       &kp RIGHT_BRACKET  &kp SINGLE_QUOTE  &none
&none  &kp LEFT_SHIFT  &kp F7  &kp F8   &kp F9  &kp PAGE_DOWN    &kp PIPE        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH      &kp RIGHT_SHIFT   &none
                               &kp F10  &trans  &trans           &trans          &trans                &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
